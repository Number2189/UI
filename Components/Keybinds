local utils = loadstring(game:HttpGet(GithubDirectory("Utils")))()

local keybinds = {}

local userinputservice = game:GetService("UserInputService")

function keybinds.Create(parent, theme, text, defaultkey, callback)
    local keybind = Instance.new("Frame")
    keybind.Name = "Keybind"
    keybind.Parent = parent
    keybind.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    keybind.BorderSizePixel = 0
    keybind.Size = UDim2.new(1, 0, 0, 25)
    utils.CreateCorner(keybind, 4)
    utils.CreateStroke(keybind)

    local label = Instance.new("TextLabel")
    label.Parent = keybind
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Size = UDim2.new(1, -80, 1, 0)
    label.Font = Enum.Font.SourceSans
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left

    local keybutton = Instance.new("TextButton")
    keybutton.Parent = keybind
    keybutton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    keybutton.BorderSizePixel = 0
    keybutton.Position = UDim2.new(1, -70, 0.5, -10)
    keybutton.Size = UDim2.new(0, 60, 0, 20)
    keybutton.Text = defaultkey and defaultkey.Name or "None"
    keybutton.TextColor3 = Color3.fromRGB(255, 255, 255)
    keybutton.TextSize = 12
    keybutton.Font = Enum.Font.SourceSans
    utils.CreateCorner(keybutton, 4)
    utils.CreateStroke(keybutton)

    local currentkey = defaultkey
    local listening = false

    local function updatekey()
        keybutton.Text = currentkey and currentkey.Name or "None"
        if callback then callback(currentkey) end
    end

    local function listenforinput()
        if listening then return end
        listening = true
        keybutton.Text = "..."
        keybutton.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
        local connection
        connection = userinputservice.InputBegan:Connect(function(input, gameprocessed)
            if not gameprocessed and input.UserInputType == Enum.UserInputType.Keyboard then
                currentkey = input.KeyCode
                updatekey()
                listening = false
                keybutton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                connection:Disconnect()
            elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
                currentkey = nil
                updatekey()
                listening = false
                keybutton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                connection:Disconnect()
            end
        end)
    end

    keybutton.MouseButton1Click:Connect(listenforinput)
    keybutton.MouseEnter:Connect(function()
        if not listening then
            utils.Tween(keybutton, {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
        end
    end)
    keybutton.MouseLeave:Connect(function()
        if not listening then
            utils.Tween(keybutton, {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
        end
    end)

    userinputservice.InputBegan:Connect(function(input, gameprocessed)
        if currentkey and input.KeyCode == currentkey and not gameprocessed then
            if callback then callback(currentkey) end
        end
    end)

    updatekey()

    return {
        Instance = keybind,
        Set = function(key)
            currentkey = key
            updatekey()
        end,
        Get = function()
            return currentkey
        end
    }
end

return keybinds
